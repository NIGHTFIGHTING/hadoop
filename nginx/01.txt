02.Nginx适用于哪些场景？
(1)反向代理功能
[1]负载均衡
应用程序开发效率高,运行效率很低,qps,tps或者并发都是受限的,需要把很多应用服务组成集群向用户提供高可用性,需要nginx有反向代理功能,可以把动态请求传到给应用服务
应用程序构成集群,两个需求:1.动态扩容2.容灾,因此反向代理需要具有负载均衡功能

[2]缓存
在链路中,nginx是企业内网的边缘节点,随着我们链路的增长,我们体验的时延会增加.我们可以把用户看起来在一段时间不变的,缓存在nginx部分.有nginx直接向用户提供访问

(2)静态资源服务
我们在访问css,javascript,js文件,或者一些小图片

(3)API服务,OpenResty
应用程序有很多问题,数据库服务要好的很多,并发性能,tps要原高于应用服务.nginx直接访问数据,如防火墙

03.Nginx出现的历史背景
(1)互联网的数据量快速增长:互联网的快速普及,全球化,物联网
(2)数据量的快速爆照对硬件性能提出很高要求
摩尔定律在单颗cpu的频率上已经失效了,cpu开始向多核发展
操作系统和软件没有做好服务于多核架构的准备
(3)低效的Apache,一个连接对应一个进程
进程间切换,引发的性能消耗越大

04.为什么用Nginx:它的5个主要优点
(1)高并发(每个请求占用内存要少),高性能(好的架构设计)
32G64Cpu可以达到数千万的并发连接,静态资源请求可以达到100W的rps
(2)可扩展性,模块化设计,丰富的生态圈
(3)高可靠性,只nginx可以在服务器上不间断的运行数年
(4)热部署,只在不停止服务的情况下,升级nginx
在nginx可能跑着数百万的并发连接,普通服务可以直接kill掉进程,然后重启方法
因为kill掉nginx进程,会导致操作系统为所有的,已建立连接的client发送TCP-RESET复位包,很多客户端无法很好的处理复位请求
(5)BSD许可证
nginx不只是开源免费的,可以在有定制需求的场景下,去修改nginx的源代码,在运行在我们的商业场景下

05.Nginx的四个主要组成部分
(1)Nginx二进制可执行文件,有各模块源码编译出的一个文件
框架,官方模块,第三方模块,相当于汽车本身
(2)Nginx.conf配置文件,控制Nginx的行为
相当于驾驶员,虽然二进制文件提出功能,但是这些功能是否开启.或者开启了定义了怎样的行为处理请求
(3)access.log访问日志,记录每一条http请求信息与响应信息
相当于汽车经过地方的GPS轨迹
对web服务做运营,运维分析
(4)error.log错误日志,定位问题

06.Nginx的版本发布历史
http://nginx.org --->download
http://nginx.org/en/CHANGES
feature新增的功能
bugfix修复的bug
change重构
Mainline version主干版本
Stable version稳定版本
