OOP
-------------------
    oriented object program
    面向对象编程
    class
    面向过程

OOP特征
-------------------
    继承
    封装
    多态

OOA
-------------------
    oriented object analyze

OOD
-------------------
    oriented object design

c
-------------------
    面向过程的语言,
    出发点非常低.

线性思维
-------------------

main() {
    ...
}

// 图纸
class {
}

class:对现实事物软件抽象。
Object:切实存在的个体,实例。

类的成员
------------------
    成员变量:对象的成员变量在heap区
    成员函数:

局部变量在stack中，没有默认的初始化值

c == null ?
null
new

StackOverFlow
栈stack method fram:方法帧
push|pop
heap

stack
------------------
    runtime

Person p = new Person();
    1.定义p
    2.创建对象(heap,产生地址)
    3.赋值

p = &p;
NullPointerException.
java没有指针
--------------------
    java没有显示的指针操作。

class ...{ 
    // 成员变量
    String name;
    int age;
    // 成员函数
    void run() {
    }
}

p.name
p.age

class Dog {
    String name ;
    String color ;
    void watch() {
        System.out.println("有人来了,汪汪汪...");
    }
    void catchMouse() {
        System.out.println("抓了只老鼠,");
    }
}

匿名
------------------
    Dog d1 = new Dog();
    new Dog();
    1.只能调用1次
    2.作为参数传递给方法

面向对象的特征
-------------------
    1.封装
　　2.继承
　　3.多态

private:私有
public:共有


java的栈空间设置
-------------------
    java -X    // 输出java的非标准选项
    java -Xss<size> xxx    // 设置stack大小
    java -Xss512k ...    // stack默认大小是1m
    java -Xss256K ...    ..2561k
    java -Xss128k ...
    java -Xss64k ...
    java默认栈是1m,至少是108k,通过
    java -Xss64k ...有错误提示

java堆空间
------------------
    默认是物理内存的1/8.
    java -Xmx512m -Xmx512m ... // -Xmx 设置堆最大值,-Xms设置堆初始值
    java -Xmx4g -Xms4g HeapStackDemo

构造函数
------------------
    Construct
    0.类有默认的构造函数
        public Xxx() {}
    1.函数和类同名
    2.不需要定义返回类型
    3.没有具体的返回值
    4.作用是初始化对象

类成员
------------------
    1.成员变量
    2.成员函数
    3.构造函数
    4.构造代码块
    5.静态代码块
        在类加载过程中调用,而且只调用一次.

对象创建过程
-----------------
    new Dog(); 
    1.在内存中分配内存空间.
    2.对成员变量赋默认值.
    3.执行构造代码块或赋值语句,执行顺序从上到下.
    4.成员变量赋初始值.
    5.构造函数.

static成员,跟对象无关,访问方式是Class.XXX{}
this:指向对象自身的引用.可以看作是类中内置的成员变量.
this():调用其他构造函数的方式,而且必须作为第一条语句.

static关键字
    用于修饰成员(成员变量和成员函数)
被修饰后的成员具备以下特点:
    随着类的加载而加载
    优先于对象存在
    被所有对象所共享
    可以直接被类名调用
使用注意:
    静态方法只能访问静态成员
    静态方法中不可以写this,super关键字
    主函数是静态的

作业
----------------
    1.构造为什么没有返回类型声明?
    2.阐述对象创建过程.
    3.为什么构造代码块可以访问之后定义的成员变量?
    4.静态成员和非静态成员的区别?
    5.如何理解this,什么时候使用this?
    6.构造函数调用其他构造函数的方式
    7.绘制java stack + heap的运行机制,如何堆和站的空间大小

继承
----------------
    1.抽象共性
    2.多个类是子类,抽象的类是父类(超类)
    3.
