// `Struct` represents a structured data value, consisting of fields
// which map to dynamically typed values. In some languages, `Struct`
// might be supported by a native representation. For example, in
// scripting languages like JS a struct is represented as an
// object. The details of that representation are described together
// with the proto support for the language.
//
// The JSON representation for `Struct` is JSON object.
message Struct {
    repeated FieldEntry fields = 1;
}
message FieldEntry {
    optional string key = 1;
    optional Value value = 2;
}
// `Value` represents a dynamically typed value which can be either
// null, a number, a string, a boolean, a recursive struct value, or a
// list of values. A producer of value is expected to set one of that
// variants, absence of any variant indicates an error.
//
// The JSON representation for `Value` is JSON value.
message Value {
    enum ValueType {
        NULL_VALUE = 0;
        INT32 = 1;
        UINT32 = 2;
        INT64 = 3;
        UINT64 = 4;
        DOUBLE = 5;
        STRING = 6;
        BOOL = 7;
        STRUCT = 8;
        LIST = 9;
    }
    //The kind of value.
    optional ValueType type = 1;
    // Represents a null value.
    optional NullValue null_value = 2;
    // Represents a int32 value.
    optional int32 int32_number_value = 3;
    // Represents a uint32 value.
    optional uint32 uint32_number_value = 4;
    // Represents a int64 value.
    optional int64 int64_number_value = 5;
    // Represents a uint64 value.
    optional uint64 uint64_number_value = 6;
    // Represents a double value.
    optional double double_number_value = 7;
    //Represents a string value.
    optional string string_value = 8;
    // Represents a boolean value.
    optional bool bool_value = 9;
    //Represents a structured value.
    optional Struct struct_value = 10;
    //Represents a repeated `Value`.
    optional ListValue list_value = 11;
}
// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
// The JSON representation for `NullValue` is JSON `null`.
enum NullValue {
    // Null value.
    NULL_VALUE = 0;
}
// `ListValue` is a wrapper around a repeated field of values.
//
// The JSON representation for `ListValue` is JSON array.
message ListValue {
    // Repeated field of dynamically typed values.
    repeated Value values = 1;
}
